// <auto-generated />
using System;
using AdmissionEasy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdmissionEasy.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221125132812_Many_to_many")]
    partial class Manytomany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdmissionEasy.Models.AdditionalInformationAboutAreaOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPlacesOnBudget")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPlacesOnPaid")
                        .HasColumnType("int");

                    b.Property<int?>("PassingScoreOnBudget")
                        .HasColumnType("int");

                    b.Property<int?>("PassingScoreOnPaid")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInformationAboutAreaOfStudy");
                });

            modelBuilder.Entity("AdmissionEasy.Models.AreaOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdditionalInformationAboutAreaOfStudyId")
                        .HasColumnType("int");

                    b.Property<int>("FormOfEducationId")
                        .HasColumnType("int");

                    b.Property<int>("InstituteId")
                        .HasColumnType("int");

                    b.Property<int>("LevelOfEducationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalInformationAboutAreaOfStudyId");

                    b.HasIndex("FormOfEducationId");

                    b.HasIndex("InstituteId");

                    b.HasIndex("LevelOfEducationId");

                    b.ToTable("AreaOfStudy");
                });

            modelBuilder.Entity("AdmissionEasy.Models.AreaOfStudySubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaOfStudyId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaOfStudyId");

                    b.HasIndex("SubjectId");

                    b.ToTable("AreaOfStudySubject");
                });

            modelBuilder.Entity("AdmissionEasy.Models.FormOfEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormOfEducation");
                });

            modelBuilder.Entity("AdmissionEasy.Models.Institute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Institute");
                });

            modelBuilder.Entity("AdmissionEasy.Models.LevelOfEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LevelOfEducation");
                });

            modelBuilder.Entity("AdmissionEasy.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AdmissionEasy.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("University");
                });

            modelBuilder.Entity("AdmissionEasy.Models.AreaOfStudy", b =>
                {
                    b.HasOne("AdmissionEasy.Models.AdditionalInformationAboutAreaOfStudy", "AdditionalInformationAboutAreaOfStudy")
                        .WithMany()
                        .HasForeignKey("AdditionalInformationAboutAreaOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdmissionEasy.Models.FormOfEducation", "FormOfEducation")
                        .WithMany()
                        .HasForeignKey("FormOfEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdmissionEasy.Models.Institute", "Institute")
                        .WithMany()
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdmissionEasy.Models.LevelOfEducation", "LevelOfEducation")
                        .WithMany()
                        .HasForeignKey("LevelOfEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalInformationAboutAreaOfStudy");

                    b.Navigation("FormOfEducation");

                    b.Navigation("Institute");

                    b.Navigation("LevelOfEducation");
                });

            modelBuilder.Entity("AdmissionEasy.Models.AreaOfStudySubject", b =>
                {
                    b.HasOne("AdmissionEasy.Models.AreaOfStudy", "AreaOfStudy")
                        .WithMany()
                        .HasForeignKey("AreaOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdmissionEasy.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaOfStudy");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AdmissionEasy.Models.Institute", b =>
                {
                    b.HasOne("AdmissionEasy.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });
#pragma warning restore 612, 618
        }
    }
}
